{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://bounce/./scripts/app.ts","webpack://bounce/./scripts/ball.ts","webpack://bounce/./scripts/images.ts","webpack://bounce/./scripts/modal.ts","webpack://bounce/./scripts/utility.ts","webpack://bounce/webpack/bootstrap","webpack://bounce/webpack/runtime/define property getters","webpack://bounce/webpack/runtime/hasOwnProperty shorthand","webpack://bounce/webpack/runtime/make namespace object","webpack://bounce/./scripts/index.ts"],"sourcesContent":["import { Ball } from \"./ball\";\nimport { imageList, addImage, imageCache } from \"./images\";\nimport { Velocity } from \"./types\";\nimport { util } from \"./utility\";\n\nexport const appProps = {\n  count: 0,\n  radiusSizes: { s: 40, m: 40, l: 50, current: 50 },\n  screenBreakPoints: { l: 1280, m: 768 },\n  gravity: { value: 0.01, isOn: true, btn: document.getElementById('gravity-btn') },\n  balls: <Ball[]>[],\n  selectedImgEle: <HTMLImageElement | null>null,\n  selectedBall: <Ball | null>null,\n  selectedPositions: {\n    prev: { x: 0, y: 0 },\n    current: { x: 0, y: 0 },\n    reference: { x: 0, y: 0 }\n  },\n  selectedAngleThreshold: 10,\n  mouseMoveDistThreshold: 10,\n  velocityThreshould: 0.05,\n  overlapThreshold: 0.05,\n  wallModifiers: { left: 1.1, right: 1.1, top: 1, bottom: 1.8 },\n  currentTime: 0,\n  selectedTime: 0,\n  deceleration: 0.995,\n  canvas: <HTMLCanvasElement>document.getElementById('canvas'),\n  canvasHorizontalGap: 5 * 2,\n  canvasTopOffset: 70,\n  party: {\n    isActive: false, start: 0, duration: 10000, maxVelocity: 2, minVelocity: 0.5,\n    wallModRef: { left: 1, right: 1, top: 1, bottom: 1 },\n    gravityRef: true, colourRef: <[number, number][]>[],\n    partyBtn: document.getElementById('party-btn')!\n  },\n  rainBow: ['#ff0000', '#ffa500', '#ffff00', '#008000', '#0000ff', '#4b0082', '#ee82ee'] //rainbow colours\n};\n\nexport function init(): void {\n  addEventListeners();\n  //set initial canvas dimensions\n  setSizes();\n  // Load all the images in the image list\n  Promise.all(\n    imageList.map(img => addImage(\n      img, imageCache, 50)\n    )\n  ).then(_ => {\n    appProps.currentTime = new Date().getTime();\n    window.requestAnimationFrame(draw);\n  });\n};\n\n/**\n * Add event handlers for the canvas.\n */\nfunction addEventListeners(): void {\n  window.onresize = () => {\n    setSizes();\n  };\n  appProps.canvas.addEventListener('pointerdown', onMouseDown);\n  appProps.canvas.addEventListener('pointermove', onMouseMove);\n  appProps.canvas.addEventListener('pointerup', onMouseUp);\n  appProps.canvas.addEventListener('pointerleave', onMouseLeave);\n\n  const gravityBtn = document.getElementById('gravity-btn');\n  //toggle the colour of the text on the gravity button.\n  gravityBtn?.addEventListener('click',\n    function toggleGravity() {\n      if (appProps.party.isActive) return;\n      appProps.gravity.isOn = !appProps.gravity.isOn;\n      toggleGravityBtn(appProps.gravity.isOn);\n    }\n  );\n  //start the party.\n  document.getElementById('party-btn')?.addEventListener('click', () => {\n    party();\n  })\n}\n\nfunction toggleGravityBtn(isOn: boolean) {\n  if (isOn) {\n    appProps.gravity.btn?.classList.add('selected');\n  } else {\n    appProps.gravity.btn?.classList.remove('selected');\n  }\n}\n\n/**\n * Change the canvas dimensions and the ball radius sizes\n * everytime the browser is resized.\n */\nfunction setSizes(): void {\n  try {\n    if (appProps.canvas === null) throw new Error('canvas is null');\n    const width = window.innerWidth - 50;\n    const height = window.innerHeight - 30;\n\n    if (width < appProps.screenBreakPoints.m) {\n      appProps.radiusSizes.current = appProps.radiusSizes.s;\n    } else if (width < appProps.screenBreakPoints.l) {\n      appProps.radiusSizes.current = appProps.radiusSizes.m;\n    } else {\n      appProps.radiusSizes.current = appProps.radiusSizes.l;\n    }\n\n    appProps.canvas.width = width - appProps.canvasHorizontalGap;\n    appProps.canvas.height = height - appProps.canvasTopOffset;\n\n    appProps.balls.forEach(ball => ball.radius = appProps.radiusSizes.current);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n\n/**\n * Remove the selected ball from the ball array\n */\nfunction deleteBall(ballToDelete: Ball) {\n  try {\n    const index = appProps.balls.findIndex(ball => ball.id === ballToDelete.id);\n    if (index === -1) {\n      throw new Error(`ball of id:${ballToDelete.id} could not be found.`);\n    } else {\n      appProps.balls.splice(index, 1);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction createAndStoreBall(\n  imgEle: HTMLImageElement,\n  x: number,\n  y: number,\n  radius = appProps.radiusSizes.current,\n  selected = false\n): Ball | undefined {\n  try {\n    const imgIndex = Number(imgEle.dataset['index']);\n    const ball = new Ball(imageCache[imgIndex], x, y, radius, selected);\n    appProps.balls.push(ball);\n    appProps.count++;\n    //Update colour reference if created during party mode.\n    if (appProps.party) {\n      appProps.party.colourRef[ball.id] = [Math.floor(Math.random() * appProps.rainBow.length), 0];\n    }\n    return ball;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n/**\n * Draw each frame\n */\nfunction draw() {\n  const ctx = appProps.canvas.getContext('2d')!;\n  const ellapsedTime = new Date().getTime() - appProps.currentTime;\n  appProps.currentTime = new Date().getTime();\n\n  //Check and update the party conditions.\n  if (appProps.party.isActive) {\n    ctx.fillStyle = 'rgba(220, 219, 6, 0.1)';\n    ctx.fillRect(0, 0, appProps.canvas.width, appProps.canvas.height);\n    const ellapsedPartyTime = new Date().getTime() - appProps.party.start;\n    //party btn backgroup position as percentage value\n    let partyBtnBGPos = ellapsedPartyTime / appProps.party.duration * 100;\n    if (ellapsedPartyTime > appProps.party.duration) {\n      partyBtnBGPos = 0;\n      appProps.party.isActive = false;\n      appProps.wallModifiers = { ...appProps.party.wallModRef };\n      appProps.gravity.isOn = appProps.party.gravityRef;\n      toggleGravityBtn(appProps.gravity.isOn);\n      appProps.party.colourRef = [];\n    } else {\n      //update the ball border colours after each second.\n      appProps.party.colourRef.forEach((val, idx) => {\n        appProps.party.colourRef[idx] = [val[0], ellapsedPartyTime];\n      })\n    }\n    setEleBackGroundPosition(appProps.party.partyBtn, partyBtnBGPos);\n  } else {\n    ctx.clearRect(0, 0, appProps.canvas.width, appProps.canvas.height);\n  }\n\n  //draw each of the balls and then update its position.\n  appProps.balls.forEach(ball => {\n    if (!ball.selected) {\n      drawBall(ctx, ball);\n    }\n    updateBall(ball, ellapsedTime);\n\n  })\n\n  fixBallOverlaps(appProps.balls);\n  appProps.balls.forEach(ball => {\n    if (!ball.selected) {\n      ball.rotation += calcBallRotation(ball);\n    }\n  })\n  //draw selected ball last so it shows up on top.\n  drawBall(ctx, appProps.selectedBall);\n\n  window.requestAnimationFrame(() => { draw() });\n}\n\n/**\n * update the ball's state after each frame.\n */\nfunction updateBall(ball: Ball, ellapsedTime: number) {\n  let { position, selected, velocity } = ball;\n  if (!selected) {\n    ball.prevPosition = { ...position };\n    const halfGravity = appProps.gravity.value / 3;\n    if (Math.abs(ball.velocity.vX) < halfGravity) ball.velocity.vX = 0;\n    if (Math.abs(ball.velocity.vY) < halfGravity) ball.velocity.vY = 0;\n    appProps.gravity.isOn && (velocity.vY += appProps.gravity.value);\n    const distX = velocity.vX * ellapsedTime;\n    position.x += distX;\n    position.y += velocity.vY * ellapsedTime;\n    velocity.vX *= appProps.deceleration;\n    handleBallCollissions(ball);\n    handleWallCollissions(ball);\n  }\n}\n/**\n * Adjust the position of the ball based on the nearest ball collission\n */\nfunction handleBallCollissions(ball: Ball): void {\n  let collisions = <Ball[]>[];\n  appProps.balls.forEach(ball2 => {\n    if (ball.id !== ball2.id && !ball2.selected) {\n      if (ball.getOverlap(ball2) > appProps.overlapThreshold) collisions.push(ball2);\n    }\n  })\n  //sort collision by distance between balls and then handle them sequentially.\n  if (collisions.length > 0) {\n    collisions.sort((a, b) => {\n      const distA = util.distanceBetween2Points(ball.position, a.position);\n      const distB = util.distanceBetween2Points(ball.position, b.position);\n      return distA - distB;\n    })\n\n    // let collidingBalls = [ball, collisions[0]];\n\n    ball.reversePosition(ball.getOverlap(collisions[0]));\n    const [v1, v2] = ballsBounce(ball, collisions[0]);\n    ball.velocity = v1;\n    collisions[0].velocity = v2;\n    // ball.ballBounce(collisions[0]);\n  }\n  collisions = [];\n}\n\n/**\n * calculate the velocity after two balls collide.\n */\nfunction ballsBounce(ball1: Ball, ball2: Ball): [Velocity, Velocity] {\n  let ball1V = { ...ball1.velocity };\n  let ball2V = { ...ball2.velocity };\n  if (ball1.checkBallCollision(ball2)) {\n    ball1V = util.getBallCollisionVelocity(ball1, ball2);\n    ball2V = util.getBallCollisionVelocity(ball2, ball1);\n  }\n  return [ball1V, ball2V];\n}\n\n/**\n * Check to see if a ball collides with a side wall.\n */\nfunction handleWallCollissions(ball: Ball): void {\n  const { position, radius, velocity } = ball;\n  const { canvas, wallModifiers } = appProps;\n  //right\n  if (position.x + radius > canvas.width) {\n    position.x = canvas.width - radius;\n    velocity.vX < 0 || (ball.velocity.vX *= -1 / wallModifiers['right']);\n    if (Math.abs(velocity.vX) < 0.05) velocity.vX = 0;\n  }\n\n  //left\n  if (position.x - radius < 0) {\n    position.x = radius;\n    velocity.vX > 0 || (ball.velocity.vX *= -1 / wallModifiers['left']);\n    if (Math.abs(velocity.vX) < 0.05) velocity.vX = 0;\n  }\n\n  //bottom\n  if (position.y + radius > canvas.height) {\n    position.y = canvas.height - radius;\n    velocity.vY < 0 || (ball.velocity.vY *= -1 / wallModifiers['bottom']);\n    if (Math.abs(velocity.vY) < 0.05) velocity.vY = 0;\n  }\n\n  //top\n  if (position.y - radius < 0) {\n    position.y = radius;\n    velocity.vY > 0 || (ball.velocity.vY *= -1 / wallModifiers['top']);\n  }\n}\n\n/**\n * Sort the list of balls base on position on the canvas.\n * Bottom to top, left to right.\n */\nfunction sortBalls(balls: Ball[]): Ball[] {\n  let sortedBallList = <Ball[]>[];\n\n  balls.forEach(ball => {\n    let listPosition = sortedBallList.findIndex(ball2 => {\n      if (ball.position.y > ball2.position.y) return true;\n      if (ball.position.y === ball2.position.y && ball.position.x < ball2.position.x) return true;\n      return false;\n    })\n    listPosition === -1 ? sortedBallList.push(ball) : sortedBallList.splice(listPosition, 0, ball);\n  })\n\n  return sortedBallList;\n}\n\n\n/**\n * check and fix any overlaps between balls after \n * handling wall and ball collisions\n */\nfunction fixBallOverlaps(balls: Ball[]) {\n  let sortedBallList = sortBalls(balls);\n  sortedBallList.forEach(ball => {\n    !ball.selected && sortedBallList.forEach(ball2 => {\n      if (ball2.selected) return;\n      const overlap = ball.getOverlap(ball2);\n      if (overlap < appProps.overlapThreshold) return;\n      const distanceOnYAxis = ball.position.y - ball2.position.y;\n      if (ball.id !== ball2.id && overlap > 0.03) {\n        const [x, y] = util.xyDiffBetweenPoints(ball.position, ball2.position);\n        const total = Math.abs(x) + Math.abs(y);\n        const xRatio = (x / total) * overlap;\n        const yRatio = (y / total) * overlap;\n        if (distanceOnYAxis === 0) {\n          ball.position.x -= 0.5 * overlap;\n          ball2.position.x += 0.5 * overlap;\n        } else {\n          distanceOnYAxis > 0 ?\n            (ball2.position.x += xRatio,\n              ball2.position.y += yRatio) :\n            (ball.position.x += xRatio,\n              ball.position.y += yRatio);\n        }\n      }\n    })\n  })\n}\n\n/**\n * Draw an individual ball.\n */\nfunction drawBall(ctx: CanvasRenderingContext2D, ball: Ball | null) {\n  if (ball === null) return;\n  const { id, position, radius, selected, rotation, img } = ball;\n  ctx.save();\n  ctx.translate(position.x, position.y);\n  ctx.rotate(Math.PI / 180 * rotation);\n  ctx.drawImage(img, -radius, -radius, radius * 2, radius * 2);\n\n  if (appProps.party.isActive) {\n    ctx.lineWidth = Math.round(radius / 10) + 1;\n    ctx.strokeStyle = appProps.rainBow[(appProps.party.colourRef[id][0]\n      + Math.floor(appProps.party.colourRef[id][1] / 1000)) % appProps.rainBow.length];\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2);\n    ctx.stroke();\n  }\n\n  if (selected) {\n    ctx.lineWidth = 4\n    ctx.strokeStyle = 'cyan'\n    ctx.beginPath()\n    ctx.arc(0, 0, radius, 0, Math.PI * 2)\n    ctx.stroke()\n  }\n  ctx.restore();\n}\n\nfunction calcBallRotation(ball: Ball): number {\n  const parameter = 2 * Math.PI * ball.radius;\n  const dist = ball.position.x - ball.prevPosition.x;\n  const rotation = dist / parameter;\n  return rotation * 360;\n}\n\nfunction party() {\n  appProps.party.start = new Date().getTime();\n  document.getElementById('party-btn')?.classList.add('btn-progress-bar')\n  if (appProps.party.isActive) {\n    appProps.balls.forEach(ball => {\n      ball.velocity = partyBallVelocity();\n    });\n    return;\n  }\n\n  appProps.party.gravityRef = appProps.gravity.isOn;\n  appProps.gravity.isOn = false;\n  toggleGravityBtn(appProps.gravity.isOn);\n  appProps.party.wallModRef = { ...appProps.wallModifiers };\n  appProps.wallModifiers = { left: 1, right: 1, top: 1, bottom: 1 };\n  appProps.party.isActive = true;\n  appProps.balls.forEach(ball => {\n    //randomly assign one of the rainbow colours to a ball at the start.\n    appProps.party.colourRef[ball.id] = [Math.floor(Math.random() * appProps.rainBow.length), 0];\n    ball.velocity = partyBallVelocity();\n  })\n}\n\n//randomise velocity for party balls.\nfunction partyBallVelocity(min: number = appProps.party.maxVelocity, max: number = appProps.party.minVelocity): Velocity {\n  let signX = -1, signY = -1;\n  if (Math.random() > 0.5) signX = 1;\n  if (Math.random() > 0.5) signY = 1;\n  return {\n    vX: Math.max((Math.random() * max), min) * signX,\n    vY: Math.max((Math.random() * max), min) * signY\n  };\n}\n\n/**\n * Set the x position of the Element's backgroup position property as a percentage.\n */\nfunction setEleBackGroundPosition(ele: HTMLElement, pos: number) {\n  ele.style.backgroundPosition = `${pos}% 100%`;\n}\n\n/**\n * Get the position of the mouse click \n * relative to the canvas\n */\nfunction getRelativeMousePos(evt: MouseEvent): [number, number] {\n  const boundingRect = (<HTMLElement>evt.target).getBoundingClientRect();\n  return [evt.clientX - boundingRect.x, evt.clientY - boundingRect.y];\n}\n\n//\n// Mouse Controls for canvas\n//\n\nfunction onMouseDown(evt: MouseEvent) {\n  if (evt.button !== 0) return; //not primary click\n  const [x, y] = getRelativeMousePos(evt);\n  if (appProps.selectedImgEle) {\n    appProps.selectedBall = createAndStoreBall(appProps.selectedImgEle, x, y) || null;\n  } else {\n    appProps.selectedBall = appProps.balls.find(ball => ball.containsPoint(x, y)) || null;\n  }\n\n  if (appProps.selectedBall) {\n    //set the initial values for properties use to calcuate the \n    //velocity of the selected ball at release.\n    appProps.selectedTime = new Date().getTime();\n    appProps.selectedBall.selected = true;\n    appProps.selectedBall.velocity = { vX: 0, vY: 0 };\n    appProps.selectedPositions.current = { x, y };\n    appProps.selectedPositions.prev = { x, y };\n    appProps.selectedPositions.reference = { x, y };\n  }\n}\n\nfunction onMouseMove(evt: MouseEvent) {\n  if (appProps.selectedBall) {\n    const [x, y] = getRelativeMousePos(evt);\n    const [moveX, moveY] = util.xyDiffBetweenPoints(appProps.selectedPositions.current, { x, y });\n    appProps.selectedBall.move(moveX, moveY);\n    appProps.selectedPositions.current = { x, y };\n\n    const distance = util.distanceBetween2Points({ x, y }, appProps.selectedPositions.prev);\n\n    //if the angle between the 3 points is greater than a certain amount\n    //assign the current position as the new reference point for velocity.\n    if (distance > appProps.mouseMoveDistThreshold) {\n      const { reference, prev, current } = appProps.selectedPositions;\n      const angle = util.angleBetween3Points(reference, prev, current) || 0;\n      if (angle > appProps.selectedAngleThreshold) {\n        appProps.selectedPositions.reference = { x, y };\n        appProps.selectedTime = new Date().getTime();\n      }\n      appProps.selectedPositions.prev = { x, y };\n    }\n  }\n}\n\n/**\n * Calculate ellapsed time and final mouse position and use it to \n * adjust the velocity for the selected ball\n */\nfunction onMouseUp(evt: MouseEvent) {\n  if (appProps.selectedBall) {\n    try {\n      const [x, y] = getRelativeMousePos(evt);\n      const [distX, distY] = util.xyDiffBetweenPoints(appProps.selectedPositions.reference, { x, y });\n\n      const ellapsedTime = new Date().getTime() - appProps.selectedTime;\n\n      appProps.selectedBall.velocity.vX = distX / ellapsedTime;\n      appProps.selectedBall.velocity.vY = distY / ellapsedTime;\n    } catch (err) {\n      appProps.selectedBall.position = { x: 50, y: 50 };\n      console.error(err);\n    }\n    appProps.selectedBall.selected = false;\n    appProps.selectedBall = null;\n  }\n}\n\nfunction onMouseLeave(evt: MouseEvent) {\n  if (appProps.selectedBall) {\n    appProps.selectedBall.selected = false;\n    appProps.selectedBall.velocity = { vX: 0, vY: 0 };\n    appProps.selectedBall = null;\n  }\n}","import { Point, Velocity } from \"./types\";\nimport { util } from \"./utility\";\n\nexport class Ball {\n  private static baseId = 1;\n  readonly id: number;\n  position: Point;\n  prevPosition: Point;\n  radius: number;\n  rotation: number;\n  velocity: Velocity;\n  selected: boolean;\n  // The img associated with an instance of Ball\n  img: ImageBitmap;\n\n  constructor(img: ImageBitmap, x: number, y: number, r: number, selected: boolean = false) {\n    this.id = Ball.baseId;\n    this.position = { x, y };\n    this.prevPosition = { x, y };\n    this.radius = r;\n    this.rotation = 0;\n    this.velocity = { vX: 0, vY: 0 }\n    this.img = img;\n    this.selected = selected;\n    Ball.baseId++;\n  }\n\n  /**\n   * move the ball by x and y amount.\n   */\n  move(x: number, y: number): void {\n    this.position.x += x;\n    this.position.y += y;\n  }\n\n  /**\n   * Reverse the position of the ball\n   * by a given distance in the opposite direction\n   * of its velocity.\n   */\n  reversePosition(distance: number): void {\n    if (this.getTotalVelocity() === 0) {\n    } else {\n      const velocityRatio = Math.sqrt(Math.pow(distance, 2) / (Math.pow(this.velocity.vX, 2) + Math.pow(this.velocity.vY, 2))) * -1;\n      this.position.x += this.velocity.vX * velocityRatio;\n      this.position.y += this.velocity.vY * velocityRatio;\n    }\n  }\n\n  getTotalVelocity(): number {\n    return Math.sqrt(Math.pow(this.velocity.vX, 2) + Math.pow(this.velocity.vY, 2));\n  }\n\n  containsPoint(x: number, y: number): boolean {\n    return Math.pow(x - this.position.x, 2) + Math.pow(y - this.position.y, 2) <= Math.pow(this.radius, 2);\n  }\n\n  /**\n   * The overlap between this instance of ball and another ball\n   */\n  getOverlap(otherBall: Ball): number {\n    const centerDistance = util.distanceBetween2Points(this.position, otherBall.position);\n    const sumOfRadii = this.radius + otherBall.radius;\n    const overlap = sumOfRadii - centerDistance;\n    return overlap >= 0 ? overlap : -1;\n  }\n\n  /**\n   * Check if this ball is colliding against another ball\n   * It's consider colliding if the overlap between the two balls is\n   * greater than or equal to 0 and the angle between the velocity vectors is less \n   * than 90 degrees.\n   */\n  checkBallCollision(ball2: Ball): boolean {\n    if (this.getOverlap(ball2) >= 0) {\n      const centerToCenter = util.xyDiffBetweenPoints(this.position, ball2.position);\n      const angle = util.angleBetween2DVector(this.velocity.vX, this.velocity.vY, centerToCenter[0], centerToCenter[1]) || 0;\n      return angle <= 90;\n    }\n    return false;\n  }\n\n  //return circle representation of the ball.\n  getCircle() {\n    return { ...this.position, r: this.radius };\n  }\n\n}","import { appProps } from \"./app\";\nimport { util } from \"./utility\";\nexport const imageList = (function () {\n\n  const imageFiles = <string[]>[\"me.jpeg\", \"grumpy.webp\", \"smileface.webp\", \"spongebob.webp\", \"pepper.png\"];\n  const imageUrls = <string[]>[];\n  const path = \"https://raw.githubusercontent.com/seegg/bounce/main/images/\";\n\n  return imageFiles.map(img => path + img).concat(imageUrls);\n\n})();\n\n//image thumbnail container\nconst container = <HTMLElement>document.getElementById('img-container');\n\n//set up image scroll controls\ndocument.getElementById('ball-scroll-controls')?.addEventListener('pointerdown', imgContainerScrollUpDown);\n\n//Keeps track of the bitmaps created from imageList and input image url and image files.\nexport let imageCache = <ImageBitmap[]>[];\n\n/**\n * Add an image base on a input url. create a bitmap and HTMLImageElement base on this image.\n * store the bitmap to an array and append the img element to the img container.\n * @param imgSrc URL for the image\n * @param imgArr Array to store the bmp created base on the image url\n * @param radius The radius of the bitmap \n * @param imgContainer The HTMLElement containing the image selection.\n * @param callback event handler for click event on the img element\n */\nexport function addImage(\n  imgSrc: string,\n  imgArr: ImageBitmap[],\n  radius: number,\n  imgContainer: HTMLElement = container\n) {\n  // const classList = ['img-thumb', 'rounded-full', 'filter', 'object-contain', 'h-12', 'w-12', 'filter', 'grayscale'];\n  const classList = ['img-thumb', 'grayscale'];\n  // const imgContainer = document.getElementById('img-container');\n  const loadingPlaceholder = document.createElement('img');\n  loadingPlaceholder.classList.add('img-thumb');\n  loadingPlaceholder.src = 'images/spinner.gif';\n  imgContainer?.appendChild(loadingPlaceholder);\n  return util.createCircleImg(imgSrc, radius)\n    .then(bitmapImg => {\n      const index = imgArr.push(bitmapImg) - 1;\n      return createImgEleWithIndex(imgSrc, index, classList)\n    })\n    .then(imgEle => {\n      if (imgContainer === null) throw new Error('image container is null');\n      appendImgElemToContainer(imgEle, imgContainer, loadingPlaceholder);\n    })\n    .catch(err => {\n      imgContainer?.removeChild(loadingPlaceholder);\n      console.error(err);\n    })\n}\n\n/**\n * Append a HTMLImageELement to a parent container\n * optional loading placeholder.\n */\nexport function appendImgElemToContainer(imgEle: HTMLImageElement, imgContainer: HTMLElement, loadingImg?: HTMLImageElement): void {\n  if (loadingImg) {\n    imgContainer.replaceChild(imgEle, loadingImg);\n  } else {\n    imgContainer.append(imgEle);\n  }\n}\n\n/**\n *create a new HTMLImageElement with a src and a list of classes.\n *assign an index number from the bitmap image array associated with \n *the src.\n */\nexport function createImgEleWithIndex(\n  src: string,\n  imgIndex: number,\n  classList: string[]\n): HTMLImageElement {\n  const imgEle = document.createElement('img');\n  imgEle.classList.add(...classList);\n  imgEle.onclick = ({ target }) => { toggleSelectedImgElement(<HTMLImageElement>target) };\n  imgEle.setAttribute('data-index', imgIndex + '');\n  imgEle.onload = () => {\n    URL.revokeObjectURL(src);\n  }\n  imgEle.src = src;\n  return imgEle;\n}\n\n/**\n * Toggle/Select the img elements \n * in the img container\n */\nexport function toggleSelectedImgElement(imgEle: HTMLImageElement) {\n  const grayscale = 'grayscale';\n  appProps.selectedImgEle?.classList.toggle(grayscale);\n  if (imgEle === appProps.selectedImgEle) {\n    appProps.selectedImgEle = null;\n  } else {\n    imgEle.classList.toggle(grayscale);\n    appProps.selectedImgEle = imgEle;\n  }\n  scrollToImgElement(imgEle);\n}\n\nexport function scrollToImgElement(imgEle: HTMLImageElement) {\n  const container = document.getElementById('img-container')!;\n  const scrollDistance = imgEle.getBoundingClientRect().top - container.getBoundingClientRect().top + container.scrollTop;\n  container.scroll(0, scrollDistance);\n}\n\nexport function imgContainerScrollUpDown(evt: Event, imgContainer: HTMLElement = container, imgThumbnailSize: number = 48) {\n  evt.preventDefault();\n\n  /**\n   * Get the mod of the scroll position against the thumbnail size.\n   * On scroll up, set the scroll position to the current position minus the thumbnail size\n   * and minus any remainders from the mod operation.\n   * On scroll down, add thumbnail size to the current position and then\n   * minus the remainder from the new position.\n   * The remainder helps to line up image thumbnails in the image container.\n   */\n  const remainder = imgContainer.scrollTop % imgThumbnailSize;\n  switch ((<HTMLElement>evt.target).id) {\n    case 'img-up':\n      imgContainer.scroll(0, remainder === 0 ? imgContainer.scrollTop - imgThumbnailSize : imgContainer.scrollTop - remainder)\n      break;\n    case 'img-down':\n      imgContainer.scroll(0, imgContainer.scrollTop + imgThumbnailSize - remainder)\n      break;\n  }\n}\n","import { appProps } from \"./app\";\nimport { addImage, imageCache } from \"./images\";\n\nconst imageUploadModal = {\n  modal: document.getElementById('modal'),\n  overlay: document.getElementById('modal-overlay'),\n  openButton: document.getElementById('image-upload-btn'),\n  /** \n   * open/close modal\n   */\n  toggle: () => {\n    imageUploadModal.modal?.classList.toggle('close');\n    imageUploadModal.overlay?.classList.toggle('close');\n  }\n}\n\n/**\n * image upload form for the modal\n */\nconst imageForm = {\n  form: document.getElementById('image-upload-form'),\n  okButton: document.getElementById('form-ok-btn'),\n  imgFileInput: <HTMLInputElement>document.getElementById('img-file'),\n  imgURLInput: <HTMLInputElement>document.getElementById('img-URL'),\n  imgFileDisplay: <HTMLInputElement>document.getElementById('file-name'),\n  imgFileDisplayButton: <HTMLButtonElement>document.getElementById('upload-button'),\n  cancelButton: document.getElementById('form-cancel-btn'),\n  handleFileDisplayClick: (evt: Event) => {\n    evt.preventDefault();\n    imageForm.imgFileInput.click();\n  },\n  handleFileChange: () => {\n    imageForm.imgFileDisplay.value = imageForm.imgFileInput.files?.item(0)?.name || 'No Image Selected';\n  },\n  handleSubmit: (evt: Event) => {\n    evt.preventDefault();\n    let imgSrc = ''\n    if (imageForm.imgFileInput.files?.item(0)) {\n      try {\n        imgSrc = URL.createObjectURL(imageForm.imgFileInput.files[0]);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      imgSrc = imageForm.imgURLInput.value;\n    }\n\n    addImage(imgSrc, imageCache, appProps.radiusSizes.current)\n      .then(_ => {\n        console.log('whatever');\n        imageUploadModal.toggle();\n      })\n      .catch(err => {\n        console.log('something');\n      })\n  },\n  handleCancel: (evt: Event) => {\n    imageForm.imgURLInput.value = '';\n    imageForm.imgFileInput.value = '';\n    imageForm.imgFileDisplay.value = '';\n    imageUploadModal.toggle();\n  }\n}\n\nexport const modalInit = () => {\n\n  imageUploadModal.overlay?.addEventListener('click', imageUploadModal.toggle);\n  imageUploadModal.openButton?.addEventListener('click', imageUploadModal.toggle);\n  imageForm.form?.addEventListener('submit', imageForm.handleSubmit);\n  imageForm.imgFileDisplayButton.addEventListener('click', imageForm.handleFileDisplayClick);\n  imageForm.imgFileInput.addEventListener('change', imageForm.handleFileChange);\n  imageForm.cancelButton?.addEventListener('click', imageForm.handleCancel);\n  //close modal on esc\n  document.addEventListener('keydown',\n    function closeModal(evt: KeyboardEvent) {\n      if (imageUploadModal.modal?.classList.contains('close')) return;\n      if (evt.key === 'Escape') {\n        imageUploadModal.toggle();\n      }\n    })\n}\n","import { Ball } from \"./ball\";\nimport { Velocity, Circle, Point } from './types';\n\n/**\n * returns the new velocity of object1 after collision with object2\n * https://en.wikipedia.org/wiki/Elastic_collision#Two-dimensional_collision_with_two_moving_objects\n * @param x1 x center object1\n * @param y1 y center object1\n * @param vx1 x velocity object1\n * @param vy1 y velocity object1\n * @param x2 x center object2\n * @param y2 y center object2\n * @param vx2 x velocity object2\n * @param vy2 y veloicity object2\n * @param mass1 mass object1\n * @param mass2 mass object2\n */\nfunction calculateCollisionVelocity(\n  x1: number, y1: number,\n  vx1: number, vy1: number,\n  x2: number, y2: number,\n  vx2: number, vy2: number,\n  mass1?: number, mass2?: number\n): Velocity {\n  const mass = mass1 && mass2 ? (2 * mass2) / (mass1 + mass2) : 1;\n  const distX = x1 - x2;\n  const distY = y1 - y2;\n  const vxDelta = vx1 - vx2;\n  const vyDelta = vy1 - vy2;\n  const dotProduct = (distX * vxDelta) + (distY * vyDelta);\n  const magnitude = Math.pow(distX, 2) + Math.pow(distY, 2);\n  const sc = dotProduct / magnitude * mass;\n\n  const newVx = vx1 - (sc * distX);\n  const newVy = vy1 - (sc * distY);\n  return { vX: newVx, vY: newVy };\n}\n\n/**\n * returns the velocity of ball1 after colliding with ball2.\n */\nfunction getBallCollisionVelocity(ball1: Ball, ball2: Ball) {\n  return calculateCollisionVelocity(ball1.position.x, ball1.position.y, ball1.velocity.vX, ball1.velocity.vY,\n    ball2.position.x, ball2.position.y, ball2.velocity.vX, ball2.velocity.vY);\n}\n/**\n * returns the difference between x and y axis of two points\n * from origin to destination.\n * Will return negative values depenping on the orientation of the points.\n */\nfunction xyDiffBetweenPoints(origin: Point, destination: Point): [number, number] {\n  return [destination.x - origin.x, destination.y - origin.y];\n}\n\n/**\n * Draw an image to a temp HTMLCanvas element\n * crop image to circle with globalCompositeOperation = 'destination-in'\n * returns a promise that resolves to an bitmap of the canvas picture.\n * @param imgScr image src\n * @param radius radius of the output circle image\n * @param outlineColour the outline colour of the circle\n */\nfunction createCircleImg(imgScr: string, radius: number, outlineColour: string = 'white', outlineSize: number = 3): Promise<ImageBitmap> {\n  return new Promise((resolve, reject) => {\n    const tempCanvas = document.createElement('canvas');\n    const diameter = radius * 2;\n    tempCanvas.width = diameter;\n    tempCanvas.height = diameter;\n    const image = document.createElement('img');\n    image.src = imgScr;\n    image.onload = () => {\n      //Calculate width and height of image in proportion to canvas size \n      //so the new image doesn't look distorted.\n      const wRatio = image.width / diameter;\n      const hRatio = image.height / diameter;\n      wRatio >= hRatio ? tempCanvas.width = Math.floor(image.width / hRatio) : tempCanvas.height = Math.floor(image.height / wRatio);\n\n      const adjustedImage = stepDownImage(image, { w: diameter, h: diameter });\n\n      const ctx = tempCanvas.getContext('2d');\n      if (ctx === null) throw new Error('context2D is null');\n      ctx.drawImage(adjustedImage, 0, 0, tempCanvas.width, tempCanvas.height);\n      ctx.beginPath();\n      ctx.arc(tempCanvas.width / 2, tempCanvas.height / 2, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.lineWidth = outlineSize;\n      ctx.strokeStyle = outlineColour;\n      ctx.stroke();\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.arc(tempCanvas.width / 2, tempCanvas.height / 2, radius, 0, Math.PI * 2);\n      ctx.fill();\n      resolve(createImageBitmap(tempCanvas, tempCanvas.width / 2 - radius, tempCanvas.height / 2 - radius, diameter, diameter));\n    }\n    image.onerror = reject\n  })\n}\n\n/**\n * Downscale an image in incremental steps using 2 HTMLcanvas by halving\n * the size of the image each time for better results.\n * @param image The input HTMLImageElement.\n * @param targetSize The size of the output image.\n */\nfunction stepDownImage(image: HTMLImageElement, targetSize: { w: number, h: number }): HTMLCanvasElement {\n\n  //draw the image to an offscreen canvas.\n  const canvas = document.createElement('canvas');\n  canvas.height = image.height;\n  canvas.width = image.width;\n  const ctx = canvas.getContext('2d')!;\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  //get the number of steps to be performed base on the largest dimension\n  const wRatio = image.width / targetSize.w;\n  const hRatio = image.height / targetSize.h;\n  const steps = Math.ceil(Math.log(wRatio >= hRatio ? hRatio : wRatio) / Math.log(2))\n\n  //halve the image with a second at each step until just before the final step.\n  const canvas2 = document.createElement('canvas');\n  const ctx2 = canvas2.getContext('2d')!;\n  for (let i = 1; i < steps; i++) {\n    canvas2.width = canvas.width / 2;\n    canvas2.height = canvas.height / 2;\n    ctx2.drawImage(canvas, 0, 0, canvas2.width, canvas2.height);\n    canvas.width = canvas2.width;\n    canvas.height = canvas2.height;\n    ctx.drawImage(canvas2, 0, 0);\n  }\n\n  //final step, draw the image to the desired size.\n  canvas2.width = targetSize.w;\n  canvas2.height = targetSize.h;\n  ctx2.drawImage(canvas, 0, 0, canvas2.width, canvas2.height);\n\n  return canvas2;\n}\n\n/**\n * Use HTMLCanvasElement.toBlob to convert a bitmap to a blob with a different mime type.\n * CORS problems from canvas if using images from different domain.\n * @param image the input bitmap\n * @param mimeType the mimeType for the blob, default image/png\n */\nfunction convertBmpToBlob(image: ImageBitmap, mimeType: string = 'image/png'): Promise<Blob | null> {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const ctx = canvas.getContext('bitmaprenderer');\n    if (ctx) {\n      ctx.transferFromImageBitmap(image);\n    } else {\n      canvas.getContext('2d')?.drawImage(image, 0, 0);\n    }\n    canvas.toBlob(function blobCallback(blob) {\n      if (blob === null) reject('Blob is null');\n      resolve(blob);\n    })\n  })\n}\n\nfunction distanceBetween2Points(point1: Point, point2: Point): number {\n  const [diffX, diffY] = xyDiffBetweenPoints(point1, point2);\n  return Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2));\n}\n\nfunction angleBetween2DVector(vx1: number, vy1: number, vx2: number, vy2: number): number {\n\n  const dotProduct = (vx1 * vx2) + (vy1 * vy2);\n  const magnitude1 = Math.sqrt(Math.pow(vx1, 2) + Math.pow(vy1, 2));\n  const magnitude2 = Math.sqrt(Math.pow(vx2, 2) + Math.pow(vy2, 2));\n  return Math.acos(dotProduct / (magnitude1 * magnitude2)) * (180 / Math.PI);\n}\n\nfunction angleBetween3Points(start: Point, mid: Point, end: Point): number {\n  return angleBetween2DVector(mid.x - start.x, mid.y - start.y, end.x - mid.x, end.y - mid.y);\n}\n\n/**\n * Return the maximum VERTICAL distance within the intersection between two circles\n * by calculating the intersect of a line down the middle of the intersection with\n * the two circles.\n * Return 0 if no intersection or if the circles intersects at only one point.\n */\nfunction maxIntersectHeight(circle1: Circle, circle2: Circle): number {\n  const distBetweenCenters = distanceBetween2Points({ x: circle1.x, y: circle1.y }, { x: circle2.x, y: circle2.y });\n  let overlappingDistance = distBetweenCenters - circle1.r - circle2.r;\n  if (overlappingDistance >= 0) return 0;\n\n  //The start and end point of the line use for calculating intersection.\n  //The start point is the mid point of the overlapping region of the two circles.\n  //The end point is created by moving 1 unit on the y axis from the start point.\n  //The line is treated as extending infinitely in either directions for the purpose of the calculation.\n\n  const midIntersectDistance = circle1.r + (overlappingDistance * 0.5);\n  const distRatio = midIntersectDistance / distBetweenCenters;\n  const startPoint = {\n    x: ((1 - distRatio) * circle1.x) + (distRatio * circle2.x),\n    y: ((1 - distRatio) * circle1.y) + (distRatio * circle2.y)\n  };\n\n  const endPoint = { ...startPoint, y: startPoint.y + 1 };\n  const [c1IntersecCount, c1Intersect1, c1Intersec2] = circleLineIntersect(startPoint, endPoint, circle1);\n  const [c2IntersectCount, c2Intersect1, c2Intersect2] = circleLineIntersect(startPoint, endPoint, circle2);\n\n  //sort the y axis positions of intersection and use the 2 middle values to calculate the\n  //max length of the overlap.\n  const yIntersects = [c1Intersect1!.y, c1Intersec2!.y, c2Intersect1!.y, c2Intersect2!.y].sort();\n  return yIntersects[2] - yIntersects[1];\n}\n\n/**\n * Return the maximum HORIZONTAL distance within the intersection between two circles\n * by calculating the intersect of a line across the middle of the intersection with\n * the two circles.\n * Return 0 if no intersection or if the circles intersects at only one point.\n */\nfunction maxIntersectWidth(circle1: Circle, circle2: Circle): number {\n  const distBetweenCenters = distanceBetween2Points({ x: circle1.x, y: circle1.y }, { x: circle2.x, y: circle2.y });\n  let overlappingDistance = distBetweenCenters - circle1.r - circle2.r;\n  if (overlappingDistance >= 0) return 0;\n  //The start and end point of the line use for calculating intersection.\n  //The start point is the mid point of the overlapping region of the two circles.\n  //The end point is created by moving 1 unit on the x axis from the start point.\n  //The line is treated as extending infinitely in either directions for the purpose of the calculation.\n\n  const midIntersectDistance = circle1.r + (overlappingDistance * 0.5);\n  const distRatio = midIntersectDistance / distBetweenCenters;\n  const startPoint = {\n    x: ((1 - distRatio) * circle1.x) + (distRatio * circle2.x),\n    y: ((1 - distRatio) * circle1.y) + (distRatio * circle2.y)\n  };\n\n  const endPoint = { ...startPoint, x: startPoint.x + 1 };\n  const [c1IntersecCount, c1Intersect1, c1Intersec2] = circleLineIntersect(startPoint, endPoint, circle1);\n  const [c2IntersectCount, c2Intersect1, c2Intersect2] = circleLineIntersect(startPoint, endPoint, circle2);\n\n  //sort the x axis positions of intersection and use the 2 middle values to calculate the\n  //max length of the overlap.\n  const xIntersects = [c1Intersect1!.x, c1Intersec2!.x, c2Intersect1!.x, c2Intersect2!.x].sort();\n  return xIntersects[2] - xIntersects[1];\n}\n\n/**\n * @returns The number of points and the points themselves where the line intersects with the circle. \n * No intersection 0, tangent 1 else 2.\n *\n */\nfunction circleLineIntersect(lineStart: Point, lineEnd: Point, circle: Circle): [number, Point | null, Point | null] {\n  //translate the coordinates of the line with the center of the circle as origin.\n  const translatedStart = { x: lineStart.x - circle.x, y: lineStart.y - circle.y };\n  const translatedEnd = { x: lineEnd.x - circle.x, y: lineEnd.y - circle.y };\n\n  // console.log(translatedStart, translatedEnd);\n  const dx = translatedEnd.x - translatedStart.x;\n  const dy = translatedEnd.y - translatedStart.y;\n  const dr = distanceBetween2Points(translatedStart, translatedEnd);\n  const D = (translatedStart.x * translatedEnd.y) - (translatedEnd.x * translatedStart.y);\n\n  const sgnDy = dy < 0 ? -1 : 1;\n  const rSquared = Math.pow(circle.r, 2);\n  const drSquared = Math.pow(dr, 2);\n  const DSquared = Math.pow(D, 2);\n  // console.log(dx, dy);\n  const discriminant = rSquared * drSquared - DSquared;\n  const numberOfIntersections = discriminant < 0 ? 0 : discriminant === 0 ? 1 : 2;\n  // console.log(discriminant);\n  if (discriminant < 0) return [numberOfIntersections, null, null];\n  // console.log('what');\n  const sqrtResult = Math.sqrt(discriminant);\n\n\n  //calculat intersecting points and translate it back to original corrodinates.\n  const x1 = ((D * dy) + (sgnDy * dx * sqrtResult)) / drSquared + circle.x;\n  const y1 = ((-1 * D * dx) + (Math.abs(dy) * sqrtResult)) / drSquared + circle.y;\n\n  const x2 = ((D * dy) - (sgnDy * dx * sqrtResult)) / drSquared + circle.x;\n  const y2 = ((-1 * D * dx) - (Math.abs(dy) * sqrtResult)) / drSquared + circle.y;\n\n  let intersect1 = { x: x1, y: y1 };\n  let intersect2 = { x: x2, y: y2 };\n\n  if (x1 > x2 || (x1 === x2 && y1 > y2)) {\n    intersect2 = { ...intersect1 };\n    intersect1 = { x: x2, y: y2 };\n  }\n\n  return [numberOfIntersections, intersect1, discriminant === 0 ? null : intersect2];\n}\n\nexport const util = {\n  calculateCollisionVelocity,\n  createCircleImg,\n  convertBmpToBlob,\n  getBallCollisionVelocity,\n  xyDiffBetweenPoints,\n  angleBetween2DVector,\n  angleBetween3Points,\n  distanceBetween2Points,\n  circleLineIntersect,\n  maxIntersectHeight,\n  maxIntersectWidth\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { init } from \"./app\";\nimport { modalInit } from \"./modal\";\n\ninit();\nmodalInit();"],"names":["appProps","count","radiusSizes","s","m","l","current","screenBreakPoints","gravity","value","isOn","btn","document","getElementById","balls","selectedImgEle","selectedBall","selectedPositions","prev","x","y","reference","selectedAngleThreshold","mouseMoveDistThreshold","velocityThreshould","overlapThreshold","wallModifiers","left","right","top","bottom","currentTime","selectedTime","deceleration","canvas","canvasHorizontalGap","canvasTopOffset","party","isActive","start","duration","maxVelocity","minVelocity","wallModRef","gravityRef","colourRef","partyBtn","rainBow","init","window","onresize","setSizes","addEventListener","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","gravityBtn","toggleGravityBtn","Date","getTime","classList","add","forEach","ball","velocity","partyBallVelocity","id","Math","floor","random","length","addEventListeners","Promise","all","imageList","img","addImage","imageCache","then","_","requestAnimationFrame","draw","remove","Error","width","innerWidth","height","innerHeight","radius","err","console","error","ele","pos","sortedBallList","ctx","getContext","ellapsedTime","fillStyle","fillRect","ellapsedPartyTime","partyBtnBGPos","val","idx","style","backgroundPosition","clearRect","selected","drawBall","position","prevPosition","halfGravity","abs","vX","vY","distX","collisions","ball2","getOverlap","push","sort","a","b","util","reversePosition","ball1","ball1V","ball2V","checkBallCollision","ballsBounce","v1","v2","handleBallCollissions","handleWallCollissions","updateBall","listPosition","findIndex","splice","sortBalls","overlap","distanceOnYAxis","total","xRatio","yRatio","rotation","parameter","PI","calcBallRotation","save","translate","rotate","drawImage","lineWidth","round","strokeStyle","beginPath","arc","stroke","restore","min","max","signX","signY","getRelativeMousePos","evt","boundingRect","target","getBoundingClientRect","clientX","clientY","button","imgEle","imgIndex","Number","dataset","Ball","createAndStoreBall","find","containsPoint","moveX","moveY","move","distY","r","this","baseId","distance","getTotalVelocity","velocityRatio","sqrt","pow","otherBall","centerDistance","centerToCenter","map","concat","container","imgContainerScrollUpDown","imgSrc","imgArr","imgContainer","loadingPlaceholder","createElement","src","appendChild","bitmapImg","index","createImgEleWithIndex","appendImgElemToContainer","removeChild","loadingImg","replaceChild","append","onclick","toggleSelectedImgElement","setAttribute","onload","URL","revokeObjectURL","grayscale","toggle","scrollToImgElement","scrollDistance","scrollTop","scroll","imgThumbnailSize","preventDefault","remainder","imageUploadModal","modal","overlay","openButton","imageForm","form","okButton","imgFileInput","imgURLInput","imgFileDisplay","imgFileDisplayButton","cancelButton","handleFileDisplayClick","click","handleFileChange","files","item","name","handleSubmit","createObjectURL","e","log","handleCancel","modalInit","contains","key","calculateCollisionVelocity","x1","y1","vx1","vy1","x2","y2","vx2","vy2","mass1","mass2","mass","sc","xyDiffBetweenPoints","origin","destination","stepDownImage","image","targetSize","wRatio","w","hRatio","h","steps","ceil","canvas2","ctx2","i","distanceBetween2Points","point1","point2","diffX","diffY","angleBetween2DVector","dotProduct","magnitude1","magnitude2","acos","circleLineIntersect","lineStart","lineEnd","circle","translatedStart","translatedEnd","dx","dy","dr","D","sgnDy","rSquared","drSquared","discriminant","numberOfIntersections","sqrtResult","intersect1","intersect2","createCircleImg","imgScr","outlineColour","outlineSize","resolve","reject","tempCanvas","diameter","adjustedImage","closePath","globalCompositeOperation","fill","createImageBitmap","onerror","convertBmpToBlob","transferFromImageBitmap","toBlob","blob","getBallCollisionVelocity","angleBetween3Points","mid","end","maxIntersectHeight","circle1","circle2","distBetweenCenters","overlappingDistance","distRatio","startPoint","endPoint","c1Intersect1","c1Intersec2","c2Intersect1","c2Intersect2","yIntersects","maxIntersectWidth","xIntersects","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag"],"sourceRoot":""}